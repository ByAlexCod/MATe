<<<<<<< HEAD
﻿using MATeV2;
using System;
=======
﻿using System;
>>>>>>> 2bd797f285cee131838cf200033146b5b2eb700c
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
<<<<<<< HEAD

=======
using MaTe;
>>>>>>> 2bd797f285cee131838cf200033146b5b2eb700c
namespace MATeUI
{
    public partial class CreatProject : Form
    {
        List<Employee> _members = new List<Employee>();

        public CreatProject()
        {
            for (int i = 0; i < 6; i++)
            {
                Employee em = new Employee("empl" + i, i.ToString(), "mate@" + i.ToString() + ".com", i.ToString());
                _members.Add(em);
            }
            InitializeComponent();
<<<<<<< HEAD
            selectManager.DataSource = _members;

            foreach (Employee employee in _members)
            {
                checkEmployee.Items.Add(employee.Firstname + " " + employee.Lastname);
            }

        }     
        private void Valid_Click(object sender, EventArgs e)
        {
            int index = selectManager.CurrentRow.Index;

            //MessageBox.Show(index + "");
            
            if (CreatPN.Text.Trim().Equals(""))
            {
                MessageBox.Show("Please enter a valid Project Name.");
            }
            else if (StartDate.Value.Month == limitDate.Value.Month && StartDate.Value.Year == limitDate.Value.Year && StartDate.Value.Day == limitDate.Value.Day)
            {
                MessageBox.Show("Impossible to put the same date!");
            }
            else if ((StartDate.Value.Year > limitDate.Value.Year) || (StartDate.Value.Year == limitDate.Value.Year & StartDate.Value.Month > limitDate.Value.Month))
=======
            projectManger.DataSource = _members;
           
            foreach (Employee employee in _members)
            {
                multiChoice.Items.Add(employee.Firstname+" "+employee.Lastname);
            }

        }

        private void CreatProject_Load(object sender, EventArgs e)
        {
           
        }

        private void button1_Click(object sender, EventArgs e)
        {

        }
        
        private void name(object sender, EventArgs e)
        {

        }

        private void button1_Click_1(object sender, EventArgs e)
        {
            if (projectName.Text.Trim().Equals(""))
            {
                MessageBox.Show("Please enter a valid Project Name.");
            }
            else if(startDate.Value.Month == limitDate.Value.Month && startDate.Value.Year == limitDate.Value.Year && startDate.Value.Day==limitDate.Value.Day)
            {
                MessageBox.Show("Impossible to put the same date!");
            }
            else if (( startDate.Value.Year>limitDate.Value.Year)|| (startDate.Value.Year == limitDate.Value.Year & startDate.Value.Month > limitDate.Value.Month))
>>>>>>> 2bd797f285cee131838cf200033146b5b2eb700c
            {
                MessageBox.Show("Impossible to put the date of end befor the date of beginig!");
            }
            else
            {
<<<<<<< HEAD
                foreach (Employee ind in checkEmployee.CheckedIndices)
                {
                    _members.Add(ind);             
                }            

                MessageBox.Show("Project is created" + " with Project Name is " + CreatPN.Text + ", Project leader is " + index.ToString() + " emloyee: " + " start date "+StartDate.Value.Date+" end time "+limitDate.Value.Date);
            }

        }

        private void checkEmployee_SelectedIndexChanged(object sender, EventArgs e)
        {
            /*if (checkEmployee.i)
            {
                selectManager.DataSource = _members;
            }*/
        }
=======
                MessageBox.Show("Project is created.");
            }
           
        }

        
>>>>>>> 2bd797f285cee131838cf200033146b5b2eb700c
    }
}
